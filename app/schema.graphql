scalar Upload

type File {
    filename: String!
    mimetype: String!
    encoding: String!
}

# Type definition

type Auth {
    token: String
    message: String
}

type User {
    _id: ID
    username: String
    email: String
    bio: String
    src: String
    likes: Int
    followers: Int
    is_active: Boolean
}

type Image {
    _id: ID
    user: String
    src: String
    likes_total: Int
    comments_total: Int
    comments: [Comment]
}

type Comment {
    _id: ID
    user_src: String
    image: String
    user: String
    body: String
}

# Input Fields

input UserCreateInput {
    username: String!
    email: String!
    bio: String!
    src: String!
    password: String!
}

input ImageCreateInput {
    user: String!
    src: String!
}

input CommentCreateInput {
    image: String!
    user: String!
    body: String!
}

input UploadCreateInput {
    image: Upload!
    user: String!
}

# Queries

type Query {
    Users: [User]
    Images(user: String!): [Image]
    Comments(image: String!): [Comment]

    User(username: String!): User
}

# Mutations 

type Mutation {
    addcomment(data: CommentCreateInput!): Comment
    saveimage(data: ImageCreateInput!): Image
    signup(data: UserCreateInput!): Auth
    singleUpload(data: UploadCreateInput!): Image
}
